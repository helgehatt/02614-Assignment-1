%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot_blk.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Fri Jan  5 20:44:15 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot_blk.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (s144457)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jan  5 20:44:15 2018)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 100 scalefont setfont
1.000 UL
LTb
550 320 M
63 0 V
6406 0 R
-63 0 V
stroke
490 320 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 200)]
] -33.3 MRshow
1.000 UL
LTb
550 780 M
63 0 V
6406 0 R
-63 0 V
stroke
490 780 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 400)]
] -33.3 MRshow
1.000 UL
LTb
550 1240 M
63 0 V
6406 0 R
-63 0 V
stroke
490 1240 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 600)]
] -33.3 MRshow
1.000 UL
LTb
550 1700 M
63 0 V
6406 0 R
-63 0 V
stroke
490 1700 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 800)]
] -33.3 MRshow
1.000 UL
LTb
550 2160 M
63 0 V
6406 0 R
-63 0 V
stroke
490 2160 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1000)]
] -33.3 MRshow
1.000 UL
LTb
550 2620 M
63 0 V
6406 0 R
-63 0 V
stroke
490 2620 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1200)]
] -33.3 MRshow
1.000 UL
LTb
550 3079 M
63 0 V
6406 0 R
-63 0 V
stroke
490 3079 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1400)]
] -33.3 MRshow
1.000 UL
LTb
550 3539 M
63 0 V
6406 0 R
-63 0 V
stroke
490 3539 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1600)]
] -33.3 MRshow
1.000 UL
LTb
550 3999 M
63 0 V
6406 0 R
-63 0 V
stroke
490 3999 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1800)]
] -33.3 MRshow
1.000 UL
LTb
550 4459 M
63 0 V
6406 0 R
-63 0 V
stroke
490 4459 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 2000)]
] -33.3 MRshow
1.000 UL
LTb
550 4919 M
63 0 V
6406 0 R
-63 0 V
stroke
490 4919 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 2200)]
] -33.3 MRshow
1.000 UL
LTb
550 320 M
0 63 V
0 4536 R
0 -63 V
stroke
550 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MCshow
1.000 UL
LTb
1197 320 M
0 63 V
0 4536 R
0 -63 V
stroke
1197 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 20)]
] -33.3 MCshow
1.000 UL
LTb
1844 320 M
0 63 V
0 4536 R
0 -63 V
stroke
1844 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 40)]
] -33.3 MCshow
1.000 UL
LTb
2491 320 M
0 63 V
0 4536 R
0 -63 V
stroke
2491 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 60)]
] -33.3 MCshow
1.000 UL
LTb
3138 320 M
0 63 V
0 4536 R
0 -63 V
stroke
3138 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 80)]
] -33.3 MCshow
1.000 UL
LTb
3785 320 M
0 63 V
0 4536 R
0 -63 V
stroke
3785 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 100)]
] -33.3 MCshow
1.000 UL
LTb
4431 320 M
0 63 V
0 4536 R
0 -63 V
stroke
4431 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 120)]
] -33.3 MCshow
1.000 UL
LTb
5078 320 M
0 63 V
0 4536 R
0 -63 V
stroke
5078 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 140)]
] -33.3 MCshow
1.000 UL
LTb
5725 320 M
0 63 V
0 4536 R
0 -63 V
stroke
5725 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 160)]
] -33.3 MCshow
1.000 UL
LTb
6372 320 M
0 63 V
0 4536 R
0 -63 V
stroke
6372 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 180)]
] -33.3 MCshow
1.000 UL
LTb
7019 320 M
0 63 V
0 4536 R
0 -63 V
stroke
7019 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 200)]
] -33.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
550 4919 N
550 320 L
6469 0 V
0 4599 V
-6469 0 V
Z stroke
LCb setrgbcolor
80 2619 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Performance [MFlop/s])]
] -33.3 MCshow
grestore
LTb
LCb setrgbcolor
3784 70 M
[ [(Helvetica) 100.0 0.0 true true 0 (Block space)]
] -33.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6536 4806 M
[ [(Helvetica) 100.0 0.0 true true 0 (-O3)]
] -33.3 MRshow
LT0
6596 4806 M
303 0 V
873 2898 M
65 263 V
65 173 V
65 174 V
64 91 V
65 143 V
65 88 V
64 115 V
65 81 V
65 44 V
64 5 V
65 119 V
65 -12 V
64 89 V
65 9 V
65 35 V
64 63 V
65 11 V
65 22 V
65 75 V
64 50 V
65 -95 V
65 132 V
64 -20 V
65 16 V
65 23 V
64 -447 V
65 485 V
65 -90 V
64 -329 V
65 -16 V
65 399 V
65 -5 V
64 -71 V
65 -228 V
65 468 V
64 -151 V
65 117 V
65 -28 V
64 -139 V
65 -313 V
65 44 V
64 71 V
65 18 V
65 -21 V
65 81 V
64 -50 V
65 102 V
65 -60 V
64 45 V
65 -48 V
65 79 V
64 38 V
65 -46 V
65 18 V
64 43 V
65 -15 V
65 88 V
64 -78 V
65 59 V
65 -28 V
65 140 V
64 -116 V
65 40 V
65 -34 V
64 30 V
65 -19 V
65 61 V
64 44 V
65 -65 V
65 24 V
64 14 V
65 41 V
65 31 V
65 -27 V
64 -7 V
65 1 V
65 32 V
64 -75 V
65 126 V
65 -55 V
64 38 V
65 -8 V
65 17 V
64 -28 V
65 37 V
65 -38 V
64 20 V
65 -13 V
65 59 V
65 -37 V
64 45 V
65 -80 V
65 -66 V
64 1 V
65 166 V
873 2898 Pls
938 3161 Pls
1003 3334 Pls
1068 3508 Pls
1132 3599 Pls
1197 3742 Pls
1262 3830 Pls
1326 3945 Pls
1391 4026 Pls
1456 4070 Pls
1520 4075 Pls
1585 4194 Pls
1650 4182 Pls
1714 4271 Pls
1779 4280 Pls
1844 4315 Pls
1908 4378 Pls
1973 4389 Pls
2038 4411 Pls
2103 4486 Pls
2167 4536 Pls
2232 4441 Pls
2297 4573 Pls
2361 4553 Pls
2426 4569 Pls
2491 4592 Pls
2555 4145 Pls
2620 4630 Pls
2685 4540 Pls
2749 4211 Pls
2814 4195 Pls
2879 4594 Pls
2944 4589 Pls
3008 4518 Pls
3073 4290 Pls
3138 4758 Pls
3202 4607 Pls
3267 4724 Pls
3332 4696 Pls
3396 4557 Pls
3461 4244 Pls
3526 4288 Pls
3590 4359 Pls
3655 4377 Pls
3720 4356 Pls
3785 4437 Pls
3849 4387 Pls
3914 4489 Pls
3979 4429 Pls
4043 4474 Pls
4108 4426 Pls
4173 4505 Pls
4237 4543 Pls
4302 4497 Pls
4367 4515 Pls
4431 4558 Pls
4496 4543 Pls
4561 4631 Pls
4625 4553 Pls
4690 4612 Pls
4755 4584 Pls
4820 4724 Pls
4884 4608 Pls
4949 4648 Pls
5014 4614 Pls
5078 4644 Pls
5143 4625 Pls
5208 4686 Pls
5272 4730 Pls
5337 4665 Pls
5402 4689 Pls
5466 4703 Pls
5531 4744 Pls
5596 4775 Pls
5661 4748 Pls
5725 4741 Pls
5790 4742 Pls
5855 4774 Pls
5919 4699 Pls
5984 4825 Pls
6049 4770 Pls
6113 4808 Pls
6178 4800 Pls
6243 4817 Pls
6307 4789 Pls
6372 4826 Pls
6437 4788 Pls
6501 4808 Pls
6566 4795 Pls
6631 4854 Pls
6696 4817 Pls
6760 4862 Pls
6825 4782 Pls
6890 4716 Pls
6954 4717 Pls
7019 4883 Pls
6747 4806 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LCb setrgbcolor
6536 4706 M
[ [(Helvetica) 100.0 0.0 true true 0 (-O0)]
] -33.3 MRshow
LT1
6596 4706 M
303 0 V
873 644 M
65 -71 V
65 79 V
65 4 V
64 5 V
65 -46 V
65 63 V
64 1 V
65 1 V
65 1 V
64 2 V
65 -29 V
65 -10 V
64 0 V
65 2 V
65 7 V
64 1 V
65 0 V
65 3 V
65 1 V
64 2 V
65 1 V
65 2 V
64 1 V
65 2 V
65 1 V
64 1 V
65 0 V
65 1 V
64 1 V
65 1 V
65 0 V
65 0 V
64 2 V
65 0 V
65 0 V
64 2 V
65 -1 V
65 0 V
64 1 V
65 2 V
65 0 V
64 0 V
65 0 V
65 2 V
65 -1 V
64 0 V
65 0 V
65 0 V
64 0 V
65 -1 V
65 -1 V
64 0 V
65 -4 V
65 -3 V
64 1 V
65 1 V
65 -2 V
64 2 V
65 -1 V
65 1 V
65 0 V
64 0 V
65 -1 V
65 1 V
64 1 V
65 0 V
65 2 V
64 0 V
65 0 V
65 0 V
64 1 V
65 -3 V
65 2 V
65 1 V
64 0 V
65 1 V
65 0 V
64 0 V
65 0 V
65 0 V
64 1 V
65 -6 V
65 0 V
64 6 V
65 0 V
65 -1 V
64 1 V
65 -1 V
65 1 V
65 -2 V
64 0 V
65 1 V
65 2 V
64 -1 V
65 2 V
873 644 Crs
938 573 Crs
1003 652 Crs
1068 656 Crs
1132 661 Crs
1197 615 Crs
1262 678 Crs
1326 679 Crs
1391 680 Crs
1456 681 Crs
1520 683 Crs
1585 654 Crs
1650 644 Crs
1714 644 Crs
1779 646 Crs
1844 653 Crs
1908 654 Crs
1973 654 Crs
2038 657 Crs
2103 658 Crs
2167 660 Crs
2232 661 Crs
2297 663 Crs
2361 664 Crs
2426 666 Crs
2491 667 Crs
2555 668 Crs
2620 668 Crs
2685 669 Crs
2749 670 Crs
2814 671 Crs
2879 671 Crs
2944 671 Crs
3008 673 Crs
3073 673 Crs
3138 673 Crs
3202 675 Crs
3267 674 Crs
3332 674 Crs
3396 675 Crs
3461 677 Crs
3526 677 Crs
3590 677 Crs
3655 677 Crs
3720 679 Crs
3785 678 Crs
3849 678 Crs
3914 678 Crs
3979 678 Crs
4043 678 Crs
4108 677 Crs
4173 676 Crs
4237 676 Crs
4302 672 Crs
4367 669 Crs
4431 670 Crs
4496 671 Crs
4561 669 Crs
4625 671 Crs
4690 670 Crs
4755 671 Crs
4820 671 Crs
4884 671 Crs
4949 670 Crs
5014 671 Crs
5078 672 Crs
5143 672 Crs
5208 674 Crs
5272 674 Crs
5337 674 Crs
5402 674 Crs
5466 675 Crs
5531 672 Crs
5596 674 Crs
5661 675 Crs
5725 675 Crs
5790 676 Crs
5855 676 Crs
5919 676 Crs
5984 676 Crs
6049 676 Crs
6113 677 Crs
6178 671 Crs
6243 671 Crs
6307 677 Crs
6372 677 Crs
6437 676 Crs
6501 677 Crs
6566 676 Crs
6631 677 Crs
6696 675 Crs
6760 675 Crs
6825 676 Crs
6890 678 Crs
6954 677 Crs
7019 679 Crs
6747 4706 Crs
% End plot #2
1.000 UL
LTb
550 4919 N
550 320 L
6469 0 V
0 4599 V
-6469 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
